********* HTML *****************
1)<a href="https://yandex.ru/" target="_blank">Yandex</a>  -- переход на сторонный сайт в новой вкладке

2)<ul> -- маркерованный список
<ol> -- нумерованный список

3)<input type="text" placeholder="Введите имя"> --placeholder серый текст
<input type="password" placeholder="Введите пароль">
M <input type="radio" name="pol" checked> Ж <input type="radio" name="pol"> -- кружки выбора, 
-- name="pol" для работы в связке
-- checked - задан по дефолту
Спорт <input type="checkbox"> -- квадратик выбора
<input type="submit"> -- отправить
<input type="reset" value="Отмена"> -- сбросить, value="Отмена" что написано на кнопке

!!! Все это вставляем внутрь тега <form> чтобы синхронно работало

4)<img src="img/my_foto.jpg" alt="это моя фотография" title="это моя фотография" width="300" height="300"
/>


 ****** CSS ******
 h1 {color: red;}
#heading -- обращение к id
.heading -- обращение к class
img[alt="phone"] -- обращение к атрибуту
.list li -- обращение к вложенности
.list > li -- обращение только к дочерним элементам
.list + p -- обращение к соседнему
h1,h2,h3{text-align: center;} -- обращение сразу ко всем
p {text-align: right! important;} -- приоритет выполнения
также всегда приоритетнее inline style
.menu li {height: 50px;} -- чем точнее указан, тем преоритетнее


border: 5px solid gold; --бордюр
border – рамка вокруг элемента
border-color: red; (#f00 | RGB(255, 0, 0))
border-style: solid; (dotted | dashed | groove | ridge | solid | double | inset |
outset)
border-width: 2px;
● border тоже подразделяется на различные свойства.
● border-color - цвет рамки.
● border-style - стиль рамки, которая может быть разных значений, такие как: dotted, dashed,
solid, double, groove, ridge, inset, outset. border-width задает толщину рамки, причем ее можно
задать для каждой из 4 сторон отдельно:
● (1px 2px) - 1px: верхняя и нижняя, 2px: левая и правая
● (1px 2px 3px) - 1px: верхняя, 2px: левая и правая, 3 нижняя
● (1px 2px 3px 4px) - 1px: верхняя, 2px: правая, 3px: нижняя, 4px: левая
Есть возможность каждую границу задавать отдельно, когда необходима, к примеру, только одна
граница.
border-top: 2px dotted green;
border-bottom: 3px double blue;
border-left: 1px solid red;
border-right: 4px inset #000;

outline -- как border, но не танцуют



background-position: 30px 40px;
background: url(img/фон.jpg) no-repeat 30px 10px; -- можно сразу Все
Фон элемента - background
background-color: #ff0;
background-image: url(img/photo.jpg);
background-position: top; (bottom | left | right)
background-repeat: repeat-x; (repeat-y | no-repeat)
background-attachment: fixed;
● background-color - задает цвет фона, который можно задавать любым из трех способов
задания цветов.
● background-image используется для того, чтобы в качестве фона можно было установит
изображение. Для этого необходимо в значении свойства указать путь к изображению в
скобках url.
● background-position - указывает где будет располагаться фоновое изображение. Может иметь
значения: top, bottom, left, right. background-repeat определяет, нужно ли повторять фоновое
изображение. repeat-x - изображение повторяется по горизонтали, repeat-y - по вертикали,
no-repeat - изображение не повторяется. По умолчанию у этого свойства установлено
значение repeat, что означает, что изображение будет повторяться по горизонтали и по
вертикали.
● background-attachment - определяет, будет ли изображение прокручиваться вместе с
содержимым элемента. По умолчанию, оно установлено как scroll, что означает, что
изображение будет прокручиваться, а при значении fixed, изображение будет оставаться
неподвижным.


list-style-type: none; -- убирает маркировку на списке

Шрифт - font
font-family: "Times New Roman", serif, Verdana;
● serif — шрифты с засечками;
● sans-serif — рубленные шрифты, без засечек;
● cursive — курсивные шрифты;
● fantasy — декоративные шрифты;
● monospace — моноширинные шрифты.
font-style: italic; (oblique | normal)
font-variant: small-caps;
font-weight: bold; (bolder | lighter| 100 | 200);
font-size: 20px; (small | medium | large);
● font-style – стиль шрифта. По умолчанию установлен шрифт в значении normal, italic - это
курсивное начертание, которое имитирует рукописный текст, а oblique - наклонное
начертание, которое получается путем наклона знаков вправо.
● font-variant имеет только 2 значения, по умолчанию установлено значение normal и small-caps,
которое у строчных букв имитирует заглавные буквы, только уменьшенного размера.
● font-weight задает насыщенность шрифта. Можно указывать значения предопределенными
словами, например, bold - полужирный, bolder - жирный, lighter - светлый. Ещё есть
возможность указывать насыщенность цифрами от 100 до 900.
● font-size определяет размер шрифта. Можно указывать в любых единицах измерения или
предопределенными словами. Указывать стиль шрифта можно при помощи сокращенной
записи. В данном случае важен порядок следования значений.


И еще некоторые полезные свойства.
● text-align - выравнивание содержимого блока по горизонтали. Принимает 4 значения: left, right,
center и justify (выравнивание происходит по ширине, т.е. одновременно по левому и по
правому краю).
● text-decoration применяется для следующего оформления текста:line-through - перечеркивает
текст, overline - задает линию над текстом, underline - задает линию под текстом
(подчеркивает текст), none (по умолчанию) - отменяет все эффекты.
● text-transform используется для изменения регистра символов. При значении capitalize каждое
слово в предложении будет начинаться с заглавной буквы, при значении lowercase все
символы будут строчными, а при значении uppercase все символы будут заглавными.

text-align: center; -- текст по центру
text-decoration: none; -- убрать подчеркивание под ссылкой
text-transform: uppercase; -- все буквы заглавные
font-size: 25px;

height: 200px;
width: 300px;


Оформление списков - list-style
list-style-type: circle; (disc | square | armenian | decimal)
list-style-position: inside;
list-style-image: url(img/list.png);
Свойство list-style определяет стиль маркера у списков.
● list-style-type - тип маркера, который может быть разных видов, в примере приведены только
некоторые из них. Остальные виды маркеров можно найти в справочнике.
● list-style-position определяет то, где располагается маркер, по умолчанию у него значение
outside. В этом случае маркеры будут располагаться за пределами текстового блока. При
значении inside, наоборот, внутри текстовых блоков.
● list-style-image позволяет вместо маркера установить изображение, для этого нужно указать к
нему путь в скобках url.


---Псевдоклассы и псевдоэлементы---
.menu li a:hover {color: red;} -- наведение
.menu li a:active {color: green;} -- нажатие, активация
.menu li:first-child {border-top-left-radius: 10px;border-top-right-radius: 10px;} -- первый ребенок
.menu li:last-child {border-bottom-left-radius: 10px;} -- последний ребенок
.menu li:nth-child(2) {background-color: hotpink;} -- n-ый ребенок (2n),(2n-1) и т.д.
.menu li:nth-child(2) a{color:orange;} -- изменение конкретного элемента
.list li:nth-child(3):after {content: " new";color: blueviolet;} -- 
.menu li:hover::after {content: ">>>";color: red;} -- 
.menu li:hover::before {content: ">>>";color: red;} -- 

Псевдоклассы, определяющие состояние элементов
a:link — ссылается на непосещенную ссылку.
a:visited — ссылается на уже посещенную ссылку.
a:hover — ссылается на любой элемент, по которому проводят курсором мыши.
a:focus — ссылается на любой элемент, над которым находится курсор мыши.
a:active — ссылается на элемент, который был активизирован пользователем.
:valid — выберет поля формы, содержимое которых прошло проверку в браузере на соответствие
указанному типу.
:invalid — выберет поля формы, содержимое которых не соответствует указанному типу. :enabled —
выберет все доступные (активные) поля форм.
:disabled — выберет заблокированные поля форм, т.е. находящиеся в неактивном состоянии.
:in-range — выберет поля формы, значения которых находятся в заданном диапазоне.
:out-of-range — выберет поля формы, значения которых не входят в установленный диапазон.
:lang() — выбирает абзацы на указанном языке. :not(селектор) — выберет элементы, которые не
содержат указанный селектор, например, класс, идентификатор или селектор элемента
:not([type="submit"]). :target — выбирает элемент с символом #, на который ссылаются в документе.
:checked — выбирает выделенные (выбранные пользователем) элементы.
Псевдоклассы, структурные
:nth-child(odd) — выбирает нечетные дочерние элементы.
:nth-child(even) — выбирает четные дочерние элементы.
:nth-child(3n) — выбирает каждый третий элемент среди дочерних.
:nth-child(3n+2) — выбирает каждый третий элемент, начиная со второго дочернего элемента (+2).
:nth-child(n+2) — выбирает все элементы, начиная со второго.
:nth-child(3) — выбирает третий дочерний элемент.
:nth-last-child() — в списке дочерних элементов выбирает элемент с указанным местоположением,
аналогично с :nth-child(), но начиная с последнего, в обратную сторону.
:first-child — позволяет оформить только самый первый дочерний элемент тега.
:last-child — позволяет форматировать последний дочерний элемент тега.
:only-child — выбирает элемент, являющийся единственным дочерним элементом.
:empty — выбирает элементы, у которых нет дочерних элементов.
:root — выбирает элемент, являющийся корневым в документе (элемент html).

Псевдоклассы по типу дочернего элемента
:nth-of-type() — выбирает элементы по аналогии с
:nth-child(), при этом берет во внимание только тип элемента.
:first-of-type — позволяет выбрать первый дочерний элемент.
:last-of-type — выбирает последний тег конкретного типа.
:nth-last-of-type() — выбирает элемент заданного типа в списке элементов в соответствии с указанным
местоположением, начиная с конца.
:only-of-type — выбирает единственный элемент указанного типа среди дочерних элементов
родительского элемента.


.podrob_decription:first-letter {font-size: 30px;color: blue;} -- заглавная буква

---Табличная верстка---
<table><tr><td></td></tr></table> -- создаем таблицу
<tr> -- строки
<td> -- ячейки

объединение ячеек, в html делать
<td colspan="5"> -- по горизонтали
rowspan="3" -- по вертикали

border-spacing: 10px; -- растояние между ячейками
padding: 10px; -- внутри (padding-left)
vertical-align: top; -- все элементы вверх
border-collapse: collapse; -- сливаем двойные границы таблицы
margin-top: 50px; - внешний отступ сверху



******* Формирование блочной модели, блочная верстка *******
.menu li {display: inline} -- делает из блочного сторочный
.menu li {display: inline-block; width: 75px} -- делает строчно блочный
.menu li ur{display: none} - делает выпадающее меню
.menu li: hover ur{display: block} -- появляется при наведении

float: left; -- "не будь жадным" "обтикание"
clear: both;  -- чтоб замечать float: left;
overflow: hidden; -- скрыть перекрытие

--- Position ---
.product_1 {position: relative;top: 50px;} -- блок может наезжать
z-index: 1; -- сместить по z, работает только с position

 position: absolute; -- от верхнего левого
 !!!!!position: relative; -- родитель, от него position: absolute;

margin: 0 auto; -- центрируем блок 






********* Разное ****************
типограф

c и таб коментарии
ctr u  --посмотреть реальный код в браузере
